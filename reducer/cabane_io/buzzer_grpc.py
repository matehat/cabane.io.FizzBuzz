# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: buzzer.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import cabane_io.buzzer_pb2 as buzzer_pb2


class BuzzBase(abc.ABC):
    @abc.abstractmethod
    async def Ask(
            self, stream:
            'grpclib.server.Stream[buzzer_pb2.BuzzQuery, buzzer_pb2.BuzzResponse]'
    ) -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/cabane.io.Buzz/Ask':
            grpclib.const.Handler(
                self.Ask,
                grpclib.const.Cardinality.UNARY_UNARY,
                buzzer_pb2.BuzzQuery,
                buzzer_pb2.BuzzResponse,
            ),
        }


class BuzzStub:
    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Ask = grpclib.client.UnaryUnaryMethod(
            channel,
            '/cabane.io.Buzz/Ask',
            buzzer_pb2.BuzzQuery,
            buzzer_pb2.BuzzResponse,
        )
